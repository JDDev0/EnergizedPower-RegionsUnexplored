plugins {
    id 'fabric-loom' version '1.7-SNAPSHOT'
    id 'maven-publish'
}

version = project.mod_version
group = project.maven_group

base {
    archivesName = project.archives_base_name
}

repositories {
    // Add repositories to retrieve artifacts from in here.
    // You should only use this when depending on other mods because
    // Loom adds the essential maven repositories to download Minecraft and libraries from automatically.
    // See https://docs.gradle.org/current/userguide/declaring_repositories.html
    // for more information about repositories.

    maven {
        url "https://maven.shedaniel.me"
    }

    maven {
        url "https://maven.terraformersmc.com/"
    }

    maven {
        url "https://squiddev.cc/maven/"
        content {
            includeGroup("cc.tweaked")
        }
    }

    maven {
        url "https://cursemaven.com"
        content {
            includeGroup "curse.maven"
        }
    }

    flatDir {
        dir 'libs'
    }
}

loom {
    accessWidenerPath = file("src/main/resources/energizedpowerru.accesswidener")
}

fabricApi {
    configureDataGeneration {
        getOutputDirectory().set(getProject().file("src/generated/resources"))
    }

    loom.runConfigs.datagen.runDir("run")
}

dependencies {
    // To change the versions see the gradle.properties file
    minecraft "com.mojang:minecraft:${project.minecraft_version}"
    mappings "net.fabricmc:yarn:${project.yarn_mappings}:v2"
    modImplementation "net.fabricmc:fabric-loader:${project.loader_version}"

    // Fabric API. This is technically optional, but you probably want it anyway.
    modImplementation "net.fabricmc.fabric-api:fabric-api:${project.fabric_version}"

    // Uncomment the following line to enable the deprecated Fabric API modules.
    // These are included in the Fabric API production distribution and allow you to update your mod to the latest modules at a later more convenient time.

    // modImplementation "net.fabricmc.fabric-api:fabric-api-deprecated:${project.fabric_version}"

    // Team Reborn: Fabric energy
    include modApi('teamreborn:energy:4.1.0') {
        exclude(group: "net.fabricmc.fabric-api")
    }

    // Energized Power dependency
    modCompileOnly "curse.maven:energized-power-782147:5510660"

    modLocalRuntime "curse.maven:energized-power-782147:5510660"

    // Regions Unexplored integration
    modCompileOnly "curse.maven:regions-unexplored-659110:5579923"

    modLocalRuntime "curse.maven:regions-unexplored-659110:5579923"
    modLocalRuntime 'com.electronwill.night-config:core:3.7.4'
    modLocalRuntime 'com.electronwill.night-config:toml:3.7.3'
    modLocalRuntime "curse.maven:terrablender-fabric-565956:5685547"
    modLocalRuntime "curse.maven:forge-config-api-port-fabric-547434:5605610"

    // For more info...
    // http://www.gradle.org/docs/current/userguide/artifact_dependencies_tutorial.html
    // http://www.gradle.org/docs/current/userguide/dependency_management.html
    modLocalRuntime "dev.emi:emi-fabric:1.1.13+1.21.1"
}

processResources {
    inputs.property "version", project.version

    filesMatching("fabric.mod.json") {
        expand "version": project.version
    }
}

tasks.withType(JavaCompile).configureEach {
    it.options.release = 21
}

java {
    // Loom will automatically attach sourcesJar to a RemapSourcesJar task and to the "build" task
    // if it is present.
    // If you remove this line, sources will not be generated.
    withSourcesJar()

    sourceCompatibility = JavaVersion.VERSION_21
    targetCompatibility = JavaVersion.VERSION_21
}

jar {
    from("LICENSE") {
        rename { "${it}_${project.base.archivesName.get()}"}
    }
}

// configure the maven publication
publishing {
    publications {
        mavenJava(MavenPublication) {
            artifactId = project.archives_base_name
            from components.java
        }
    }

    // See https://docs.gradle.org/current/userguide/publishing_maven.html for information on how to set up publishing.
    repositories {
        // Add repositories to publish to here.
        // Notice: This block does NOT have the same function as the block in the top level.
        // The repositories here will be used for publishing your artifact, not for
        // retrieving dependencies.
    }
}

//Dummy task to fix post sync error caused by NeoGradle
tasks.register("idePostSync") {

}

// IDEA no longer automatically downloads sources/javadoc jars for dependencies, so we need to explicitly enable the behavior.
idea {
    module {
        downloadSources = true
        downloadJavadoc = true
    }
}